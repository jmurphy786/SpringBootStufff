package integration;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;

import static org.hamcrest.CoreMatchers.is;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.delete;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;

import com.qa.springboot.MySpringBootApplication;
import com.qa.springboot.mySpringBootDatabaseApp.mySpringBootDataModel;
import com.qa.springboot.mySpringBootRepository.personRepository;

@RunWith(SpringRunner.class)
@SpringBootTest(classes = {MySpringBootApplication.class})
@AutoConfigureMockMvc	
public class IntegrationTest {
	
	@Autowired
	private MockMvc mvc;
	
	@Autowired
	private personRepository repository;

	@Before
	public void clearDB() {
		repository.deleteAll();
	}

	@Test
	public void findingAndRetrievingPersonFromDatabase() throws Exception{
		repository.save(new mySpringBootDataModel("Dale", "Salford", 2));
		mvc.perform(get("/api/person")
				.contentType(MediaType.APPLICATION_JSON))
		.andExpect(status().isOk())
		.andExpect(content().contentTypeCompatibleWith(MediaType.APPLICATION_JSON))
		.andExpect(jsonPath("$[0].name", is("Dale")));
		
	}
	
	@Test
	public void addPersonToDataBaseTest() throws Exception{
		mvc.perform(post("/api/person").contentType(MediaType.APPLICATION_JSON)
		.content("{\"name\" : \"Robert\",\"address\" : \"Atlantis\", \"age\" : 200}")).andExpect(status().
				isOk()).andExpect(content().contentTypeCompatibleWith(MediaType.APPLICATION_JSON)).
				andExpect(jsonPath("$[0].name", is("Robert")));
		
	}
}
		